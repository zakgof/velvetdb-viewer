plugins {
  id 'java'
  id 'maven'
  id 'signing'
}

compileJava.options.encoding = 'UTF-8'

group = 'com.github.zakgof'
archivesBaseName = 'velvetdb-viewer'

def ossrhUsername = hasProperty('ossrhUsername') ? ossrhUsername : System.getenv('ossrhUsername')
def ossrhPassword = hasProperty('ossrhPassword') ? ossrhPassword : System.getenv('ossrhPassword')

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    compile 'com.github.zakgof:velvetdb-xodus:0.8.4-SNAPSHOT'
    compile 'com.sparkjava:spark-core:2.3'
    compile 'com.google.inject:guice:3.0'
    compile 'com.google.guava:guava:26.0-jre'
    compile 'commons-lang:commons-lang:2.1'
    compile 'commons-io:commons-io:2.5'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'javax.transaction:javax.transaction-api:1.2-b03'
    compileOnly 'javax.interceptor:javax.interceptor-api:1.2.2'
    project(':frontend')
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task testJar(type: Jar) {
    classifier = 'tests'
    from sourceSets.test.output
}

test {
    exclude "**"
}

artifacts {
    archives javadocJar, sourcesJar, testJar
}

signing {
    sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        packaging 'jar'
        artifactId 'velvetdb-viewer'
        url 'https://github.com/zakgof/velvetdb-viewer'
        
        name 'velvetdb'
        description 'General purpose graph database.'

        scm {
          connection 'scm:git:https://github.com/zakgof/velvetdb-viewer.git'
          developerConnection 'scm:git:https://github.com/zakgof/velvetdb-viewer.git'
          url 'https://github.com/zakgof/velvetdb-viewer/tree/master'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'zakgof'
            name 'Oleksandr Zakusylo'
            email 'zakgof@gmail.com'
          }
        }
      }
    }
  }
}

jar {
    into 'website', {
        from(project('frontend').buildDir)
    }
}

task fatjar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.zakgof.velvetdb.viewer.example.Main'
    }
    baseName = 'fatjar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}